//
//   Written by Peter O. 2015.
//
//   Any copyright to this work is released to the Public Domain.
//   https://creativecommons.org/publicdomain/zero/1.0/
//
//
//

.text-primary-color(@color) when(luma(@color)>=50%) {
 @text-primary-color: rgba(0,0,0,87%); // black
}
.text-primary-color(@color) when(luma(@color)<50%) {
 @text-primary-color: #fff; // white
}
.text-secondary-color(@color) when(luma(@color)>=50%) {
 @text-secondary-color: rgba(0,0,0,54%); // black
}
.text-secondary-color(@color) when(luma(@color)<50%) {
 @text-secondary-color: rgba(255,255,255,70%); // white
}
.text-hint-color(@color) when(luma(@color)>=50%) {
 @text-hint-color:  rgba(0,0,0,38%); // black
}
.text-hint-color(@color) when(luma(@color)<50%) {
 @text-hint-color: rgba(255,255,255,50%); // white
}
.divider-color(@color) when(luma(@color)>=50%) {
 @divider-color:  rgba(0,0,0,12%); // black
}
.divider-color(@color) when(luma(@color)<50%) {
 @divider-color: rgba(255,255,255,12%); // white
}
.background-text-primary(@color) {
 background-color: @color;
 .text-primary-color(@color);
 color: @text-primary-color;
}
.background-text-secondary(@color) {
 background-color: @color;
 .text-secondary-color(@color);
 color: @text-secondary-color;
}
.background-text-hint(@color) {
 background-color: @color;
 .text-hint-color(@color);
 color: @text-hint-color;
}
.border-divider(@color) {
 .divider-color(@color);
 border-color: @divider-color;
}

.boxShadow(@size,@color){
 box-shadow: @size @size @size @color;
}

.noBoxShadow(){
 box-shadow: 0px 0px 0px rgba(0,0,0,0) !important;
}
.noTextShadow(){
 .textShadowEx(0px,0px,0px,rgba(0,0,0,0));
}
.textShadow(@size,@color){
 text-shadow: @size @size @size @color;
}

// enables tables to have a border radius
.tableRadii(@size){
border-radius: @size;
/* needed because of undefined behavior of 'border-radius' on table elements with 'border-collapse: collapse' */
border-collapse: separate;
&>tbody:first-child>tr:first-child, &>thead>tr {
  &>th:first-child, &>td:first-child { border-top-left-radius: @size;}
  &>th:last-child, &>td:last-child { border-top-right-radius: @size;}
}
&>tbody > tr:last-child {
  &, &>td:first-child { border-bottom-left-radius: @size; }
  &, &>td:last-child { border-bottom-right-radius: @size; }
}
}

.stickyfooter() {
  z-index: 100;
  bottom: 0px;
  margin: 0px 0px 0px -35%;
  width:70%;
  left:50%;
  position: fixed;
}
.stickyheader() {
  z-index: 100;
  left: 0px;
  top: 0px;
  position: fixed;
}

.inputuimodern(){
 text-decoration: none;
 margin: 0;
 padding: 0.5em 1em;
 cursor: pointer;
 border: 1px solid;
 border-radius: 3px;
 display: inline-block;
 overflow: visible;
 &:hover, &:active {
    text-decoration: none;
 }
}

.inputuifieldmodern(@background, @border){
 text-decoration: none;
 margin: 0;
 padding: 0.3em 0.6em;
 border-width: 1px;
 border-style: solid;
 .background-text-primary(@background);
 .border-divider(@border);
 background-clip: padding-box;
 border-radius: 3px;
  &:hover {
    text-decoration: none;
    .text-hint-color(@background);
    box-shadow: 0 0 3px @text-hint-color;
 }
 &:focus, &.focused {
    text-decoration: none;
    .text-hint-color(@background);
    box-shadow: 0 0 6px @text-hint-color;
 }
 &[disabled] {
  cursor: not-allowed;
  .background-text-hint(@background);
  transition: none;
  &:hover {
    .noBoxShadow();
  }
 }
 &[readonly] {
  .background-text-hint(@background);
  transition: none;
  &:hover, &:focus {
    .noBoxShadow();
  }
 }
}

.inputuibuttonmodern(
  @background,@presscolor
){
 text-decoration: none;
 margin: 0;
 padding: 0.3em 0.6em;
 border-width: 1px;
 border-style: solid;
 .background-text-primary(@background);
 .border-divider(@background);
 background-color:#ffffff;
 background-clip: padding-box;
 border-radius: 3px;
  &:hover {
    text-decoration: none;
    .text-hint-color(@background);
    box-shadow: 0 0 3px @text-hint-color;
 }
 &:focus, &.focused {
    text-decoration: none;
   .background-text-primary(@presscolor);
    .text-hint-color(@presscolor);
    box-shadow: 0 0 6px @text-hint-color;
 }
 &[disabled] {
  cursor: not-allowed;
  .background-text-hint(@background);
  transition: none;
  &:hover {
    .noBoxShadow();
  }
 }
 &[readonly] {
  .background-text-hint(@background);
  transition: none;
  &:hover, &:focus {
    .noBoxShadow();
  }
 }
}

.linearGradient(@startColor,@endColor, @fallbackColor: none){
    @sc:@startColor;
    @fbc:@fallbackColor;
    & when not (@fbc = 'none') { background: @fbc; }
    & when (@fbc = 'none') { background: @sc; }
    background-repeat: repeat-x;
    background: linear-gradient(top,@startColor,@endColor);
    *zoom:1;
    *filter: ~"progid:DXImageTransform.Microsoft.Gradient( StartColorStr='@{startColor}', EndColorStr='@{endColor}',GradientType=0)";
    .ie8 & {
       filter: ~"progid:DXImageTransform.Microsoft.Gradient( StartColorStr='@{startColor}', EndColorStr='@{endColor}',GradientType=0)";
    }
}
